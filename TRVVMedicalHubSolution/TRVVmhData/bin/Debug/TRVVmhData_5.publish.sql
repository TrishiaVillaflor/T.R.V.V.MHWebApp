/*
Deployment script for TRVVMHData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TRVVMHData"
:setvar DefaultFilePrefix "TRVVMHData"
:setvar DefaultDataPath "C:\Users\USER\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\USER\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[TRVVPatients]...';


GO
CREATE TABLE [dbo].[TRVVPatients] (
    [Id]         NVARCHAR (50) NOT NULL,
    [Name]       NVARCHAR (50) NOT NULL,
    [Address]    NVARCHAR (50) NOT NULL,
    [Phone]      NVARCHAR (50) NOT NULL,
    [Department] NVARCHAR (50) NOT NULL,
    [Illness]    NVARCHAR (50) NOT NULL,
    [Medication] NVARCHAR (50) NOT NULL,
    [Guardian]   NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[TRVVAdd]...';


GO
CREATE PROCEDURE [dbo].[TRVVAdd]
	@Id nvarchar(50),
	@Name nvarchar(50),
	@Address nvarchar (50),
	@Phone nvarchar (50),
	@Department nvarchar(50),
	@Illness nvarchar(50),
	@Medication nvarchar (50),
	@Guardian nvarchar (50)
AS
BEGIN
SET NOCOUNT ON;
INSERT INTO [dbo].[TRVVPatients] ([Id], [Name], [Address], [Phone], [Department], [Illness], [Medication], [Guardian])
		VALUES (@Id, @Name, @Address, @Phone, @Department, @Illness, @Medication, @Guardian)
END
GO
PRINT N'Creating Procedure [dbo].[TRVVDelete]...';


GO
CREATE PROCEDURE [dbo].[TRVVDelete]
	@Id nvarchar(50)
AS
BEGIN
SET NOCOUNT ON;
	DELETE FROM [dbo].[TRVVPatients] WHERE [Id] = @Id;
END
GO
PRINT N'Creating Procedure [dbo].[TRVVSearchById]...';


GO
CREATE PROCEDURE [dbo].[TRVVSearchById]
	@Id NVARCHAR(50) = NULL
AS
BEGIN
	SET NOCOUNT ON;

	SELECT TOP(1) [a].[Id] AS PatientsId
		,[a].[Name] AS PatientsName
		,[a].[Address] AS PatientsAddress
		,[a].[Phone] AS PatientsPhone
		,[a].[Department] AS PatientsDepartment
		,[a].[Illness] AS PatientsIllness
		,[a].[Medication] AS PatientsMedication
		,[a].[Guardian] AS PatientsGuardian
	FROM [dbo].[TRVVPatients] AS a
	WHERE [a].[Id] = @Id;
END
GO
PRINT N'Creating Procedure [dbo].[TRVVSearchByKeyword]...';


GO
CREATE PROCEDURE [dbo].[TRVVSearchByKeyword]
	@Keyword nvarchar(50) = NULL
AS
BEGIN
	SET NOCOUNT ON;

	SET @Keyword = CONCAT(COALESCE(@Keyword, N''), N'%');

	SELECT [a].[Id] AS PatientsId
		  ,[a].[Name] AS PatientsName
		  ,[a].[Address] AS PatientsAddress
		  ,[a].[Phone] AS PatientsPhone
		  ,[a].[Department] AS PatientsDepartment
		  ,[a].[Illness] AS PatientsIllness
		  ,[a].[Medication] AS PatientsMedication
		  ,[a].[Guardian] AS PatientsGuardian
	FROM [dbo].[TRVVPatients] AS a 
	WHERE [a].[Name] like @Keyword
	ORDER BY [a].[Name];
END
GO
PRINT N'Creating Procedure [dbo].[TRVVSearh]...';


GO
CREATE PROCEDURE [dbo].[TRVVSearh]
	AS
BEGIN
	SET NOCOUNT ON;
	 SELECT [a].[Id] AS PatientsId
		   ,[a].[Name] AS PatientsName
		   ,[a].[Address] AS PatientsAddress
		   ,[a].[Phone] AS PatientsPhone
		   ,[a].[Department] AS PatientsDepartment
		   ,[a].[Illness] AS PatientsIllness
		   ,[a].[Medication] AS PatientsMedication
		   ,[a].[Guardian] AS PatientsGuardian
	FROM [dbo].[TRVVPatients] AS a;

	END
GO
PRINT N'Creating Procedure [dbo].[TRVVUpdate]...';


GO
CREATE PROCEDURE [dbo].[TRVVUpdate]
	@Id nvarchar (50),
	@Name nvarchar (50),
	@Address nvarchar (50),
	@Phone nvarchar (50),
	@Department nvarchar (50),
	@Illness nvarchar (50),
	@Medication nvarchar (50),
	@Guardian nvarchar (50)
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE [dbo].[TRVVPatients]
	SET [Name] = @Name, 
	[Department] = @Department,
	[Address] = @Address,
	[Phone] = @Phone,
	[Illness] = @Illness,
	[Medication] = @Medication,
	[Guardian] = @Guardian
	
	WHERE [Id] = @Id
	
	END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ad294895-978c-47fe-8de0-8c06150f4cd0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ad294895-978c-47fe-8de0-8c06150f4cd0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '75546258-f8cf-4820-a74b-28a27a0f7f65')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('75546258-f8cf-4820-a74b-28a27a0f7f65')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
